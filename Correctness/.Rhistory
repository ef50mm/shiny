setwd('/Users/yichen/github/R/Correctness/')
knownBuilds <- readRDS("knownBuilds.rds")
knownBuilds$ReleaseDate <- as.Date(knownBuilds$ReleaseDate, "%Y-%m-%d")
knownBuilds <- knownBuilds[knownBuilds$Monitor == 1, ]
releases <- knownBuilds[knownBuilds$ReleaseDate > cutoffDate, ]
reliability <- readRDS("reliability.rds")
reliability$Date <- as.Date(reliability$Date, "%Y-%m-%d")
cutoffDate = as.Date("2014-10-25", "%Y-%m-%d")
populationThreshold = 100
knownBuilds <- readRDS("knownBuilds.rds")
knownBuilds$ReleaseDate <- as.Date(knownBuilds$ReleaseDate, "%Y-%m-%d")
knownBuilds <- knownBuilds[knownBuilds$Monitor == 1, ]
releases <- knownBuilds[knownBuilds$ReleaseDate > cutoffDate, ]
reliability <- readRDS("reliability.rds")
reliability$Date <- as.Date(reliability$Date, "%Y-%m-%d")
appVersions <- sort(unique(knownBuilds$AppVersion))
dates <- sort(unique(reliability$Date))
dates
incorrectnessRate <- function(build, date) {
correct <- reliability[(reliability$Name %in% c(0, 1, 5)) & (reliability$AppVersion == build) & (reliability$Date == date), ]
print(dim(correct))
incorrect <- reliability[(reliability$Name %in% c(2, 3)) & (reliability$AppVersion == build) & (reliability$Date == date), ]
if (nrow(correct) == 0 | nrow(incorrect) == 0) {
return(NA)
}
correctCount <- aggregate(correct$DeviceCount, list(build=correct$AppVersion, date=correct$Date), sum)
print(length(correct))
incorrectCount <- aggregate(incorrect$DeviceCount, list(build=incorrect$AppVersion, date=incorrect$Date), sum)
print(length(correctCount))
rate <- (incorrectCount$x / (correctCount$x + incorrectCount$x))
print(length(rate))
return(rate)
}
x = c("17.3.1229.0918", "17.3.4501.1020")
y = c(as.Date("2014-11-01", "%Y-%m-%d"), as.Date("2014-11-02", "%Y-%m-%d"), as.Date("2014-11-03", "%Y-%m-%d"))
combos <- expand.grid(x=appVersion, y=date)
combos <- expand.grid(appVersion=x, date=y)
build <- combos$appVersion
date <- combos$date
correct <- reliability[(reliability$Name %in% c(0, 1, 5)) & (reliability$AppVersion == build) & (reliability$Date == date), ]
View(correct)
incorrect <- reliability[(reliability$Name %in% c(2, 3)) & (reliability$AppVersion == build) & (reliability$Date == date), ]
correctCount <- aggregate(correct$DeviceCount, list(build=correct$AppVersion, date=correct$Date), sum)
View(correctCount)
incorrectCount <- aggregate(incorrect$DeviceCount, list(build=incorrect$AppVersion, date=incorrect$Date), sum)
View(incorrectCount)
incorrectCount$x / (correctCount$x + incorrectCount$x)
setwd('/Users/yichen/github/R/Correctness/')
cutoffDate = as.Date("2014-10-25", "%Y-%m-%d")
populationThreshold = 100
knownBuilds <- readRDS("knownBuilds.rds")
knownBuilds$ReleaseDate <- as.Date(knownBuilds$ReleaseDate, "%Y-%m-%d")
knownBuilds <- knownBuilds[knownBuilds$Monitor == 1, ]
releases <- knownBuilds[knownBuilds$ReleaseDate > cutoffDate, ]
reliability <- readRDS("reliability.rds")
reliability$Date <- as.Date(reliability$Date, "%Y-%m-%d")
appVersions <- sort(unique(knownBuilds$AppVersion))
dates <- sort(unique(reliability$Date))
incorrectnessRate <- function(build, date) {
correct <- reliability[(reliability$Name %in% c(0, 1, 5)) & (reliability$AppVersion == build) & (reliability$Date == date), ]
print(dim(correct))
incorrect <- reliability[(reliability$Name %in% c(2, 3)) & (reliability$AppVersion == build) & (reliability$Date == date), ]
if (nrow(correct) == 0 | nrow(incorrect) == 0) {
return(NA)
}
correctCount <- aggregate(correct$DeviceCount, list(build=correct$AppVersion, date=correct$Date), sum)
print(length(correct))
incorrectCount <- aggregate(incorrect$DeviceCount, list(build=incorrect$AppVersion, date=incorrect$Date), sum)
print(length(correctCount))
rate <- (incorrectCount$x / (correctCount$x + incorrectCount$x))
print(length(rate))
return(rate)
}
x = c("17.3.1229.0918", "17.3.4501.1020")
y = c(as.Date("2014-11-01", "%Y-%m-%d"), as.Date("2014-11-02", "%Y-%m-%d"), as.Date("2014-11-03", "%Y-%m-%d"))
combos <- expand.grid(appVersion=x, date=y)
build <- combos$appVersion
date <- combos$date
correct <- reliability[(reliability$Name %in% c(0, 1, 5)) & (reliability$AppVersion == build) & (reliability$Date == date), ]
incorrect <- reliability[(reliability$Name %in% c(2, 3)) & (reliability$AppVersion == build) & (reliability$Date == date), ]
correctCount <- aggregate(correct$DeviceCount, list(build=correct$AppVersion, date=correct$Date), sum)
View(correctCount)
incorrectCount <- aggregate(incorrect$DeviceCount, list(build=incorrect$AppVersion, date=incorrect$Date), sum)
View(incorrectCount)
View(combos)
View(correct)
View(correct)
View(correctCount)
correctDevices <- reliability[reliability$Name %in% c(0, 1, 5), ]
correctCount <- aggregate(correctDevices$DeviceCount, list(build=correctDevices$AppVersion, date=correctDevices$Date), sum)
incorrectDevices <- reliability[reliability$Name %in% c(2, 3), ]
incorrectCount <- aggregate(incorrectDevices$DeviceCount, list(build=incorrectDevices$AppVersion, date=incorrectDevices$Date), sum)
View(correctDevices)
View(correctCount)
View(correctCount)
incorrectnessRate <- function(build, date) {
correct <- correctCount[((correctCount$build == build) & (correctCount$date == date), correctCount$x]
incorrect <- incorrectCount[((incorrectCount$build == build) & (incorrectCount$date == date), incorrectCount$x]
rate <- (incorrect / (correct + incorrect))
return(rate)
}
incorrectnessRate <- function(build, date) {
correct <- correctCount[((correctCount$build == build) & (correctCount$date == date)), correctCount$x]
incorrect <- incorrectCount[((incorrectCount$build == build) & (incorrectCount$date == date)), incorrectCount$x]
rate <- (incorrect / (correct + incorrect))
return(rate)
}
combos <- expand.grid(appVersion=x, date=y)
incorrectnessRate(combos$x, combos$y)
build <- combos$appVersion
date <- combos$date
correct <- correctCount[((correctCount$build == build) & (correctCount$date == date)), correctCount$x]
names(correctCout)
names(correctCount)
correctCount$x
correct <- correctCount[((correctCount$build == build) & (correctCount$date == date)), ]
incorrect <- incorrectCount[((incorrectCount$build == build) & (incorrectCount$date == date)),]
incorrectnessRate <- function(build, date) {
correct <- correctCount[((correctCount$build == build) & (correctCount$date == date)), ]
incorrect <- incorrectCount[((incorrectCount$build == build) & (incorrectCount$date == date)), ]
rate <- (incorrect$x / (correct$x + incorrect$x))
return(rate)
}
incorrectnessRate(combos$appVersion, combos$date)
combos <- expand.grid(appVersion=x, date=y)
x = c("17.3.1229.0918", "17.3.4501.1020")
y = c(as.Date("2014-11-01", "%Y-%m-%d"), as.Date("2014-11-02", "%Y-%m-%d"), as.Date("2014-11-03", "%Y-%m-%d"))
combos <- expand.grid(appVersion=x, date=y)
View(combos)
incorrectnessRate(combos$appVersion, combos$date)
correct <- correctCount[((correctCount$build == build) & (correctCount$date == date)), ]
View(correct)
build <- combos$appVersion
build
date
correct <- correctCount[((correctCount$build == build) & (correctCount$date == date)), ]
View(correctCount)
View(correctCount)
View(correct)
correct <- subset(correctCount , build == build & date == date)
View(correct)
b <- combos$appVersion
d <- combos$date
correct <- subset(correctCount , build == b & date == d)
correct <- correctCount[which(((correctCount$build == build) & (correctCount$date == date)), ]
build <- combos$appVersion
date <- combos$date
correct <- correctCount[which(((correctCount$build == build) & (correctCount$date == date))), ]
correct <- correctCount[correctCount$build == build, ]
correct <- correct[correctCount$build == date, ]
build <- combos$appVersion
date <- combos$date
correct <- correctCount[correctCount$build == build, ]
correct <- correct[correctCount$date == date, ]
View(correct)
incorrectnessRate <- function(build, date) {
correct <- correctCount[correctCount$build == build, ]
correct <- correct[correct$date == date, ]
incorrect <- incorrectCount[incorrectCount$build == build, ]
incorrect <- incorrect[incorrect$date == date, ]
rate <- (incorrect$x / (correct$x + incorrect$x))
return(rate)
}
incorrectnessRate(combos$appVersion, combos$date)
combos <- expand.grid(appVersion=x, date=y)
build <- combos$appVersion
date <- combos$date
correct <- correctCount[correctCount$build == build, ]
correct <- correct[correctCount$date == date, ]
incorrect <- incorrectCount[incorrectCount$build == build, ]
incorrect <- incorrect[incorrect$date == date, ]
incorrect <- incorrectCount[incorrectCount$build == build, ]
incorrect <- incorrect[incorrect$date == date, ]
View(incorrect)
View(correct)
correctCount(date = date, build = build)
correct <- correctCount[correctCount$build == build, 3]
correct <- correct[correctCount$date == date, ]
A = [0,0,1,1 1;
0,1,1,1,1;
2,0,1,1,1;
0,2,2,2,2;
2,0,1,1,1;
0,0,1,1,%nan];
B = [1,0,1;
1,0,2;
1,2,3;
2,0,4;
1,2,5;
%nan,0,6];
A=round(5*rand(10,1));
B=round(5*rand(7,1));
x = c("17.3.1229.0918", "17.3.4501.1020")
y = c(as.Date("2014-11-01", "%Y-%m-%d"), as.Date("2014-11-02", "%Y-%m-%d"), as.Date("2014-11-03", "%Y-%m-%d"))
combos <- expand.grid(build=x, date=y)
correct <- merge(x = combos, y = correctCount, by = c("date", "build"), all.x=TRUE)
View(correct)
incorrect <- merge(x = combos, y = incorrectCount, by = c("date", "build"), all.x=TRUE)
View(incorrect)
rate <- (incorrect$x / (correct$x + incorrect$x))
rate
incorrectnessRate <- function(dateWithBuild) {
correct <- merge(x = dateWithBuild, y = correctCount, by = c("date", "build"), all.x=TRUE)
incorrect <- merge(x = dateWithBuild, y = incorrectCount, by = c("date", "build"), all.x=TRUE)
rate <- (incorrect$x / (correct$x + incorrect$x))
return(rate)
}
combos <- expand.grid(build=appVersions, date=dates)
incorrectnessRate(combos)
rate <- incorrectnessRate(combos)
results3 <- matrix(rate, nrow=length(appVersions))
View(results3)
results <- readRDS("results.rds")
View(results)
all.equal(result, result3)
all.equal(results, result3)
all.equal(results, results3)
combos <- expand.grid(appVersion=appVersions, date=dates)
rates <- incorrectnessRate(combos)
results <- matrix(rates, nrow=length(appVersions))
combos <- expand.grid(build=appVersions, date=dates)
rates <- incorrectnessRate(combos)
results <- matrix(rates, nrow=length(appVersions))
View(combos)
incorrectnessRate <- function(build, date) {
correct <- correctCount[(correctCount$build == build) & (correctCount$date == date), ]
incorrect <- incorrectCount[(incorrectCount$build == build) & (incorrectCount$date == date), ]
rate <- (incorrect$x / (correct$x + incorrect$x))
return(rate)
}
results <- matrix(, nrow = length(appVersions), ncol = length(dates))
for (r in 1:length(appVersions)) {
for (c in 1:length(dates)) {
results[r, c] <- incorrectnessRate(appVersions[r], dates[c])
}
}
appVersions <- sort(unique(knownBuilds$AppVersion))
dates <- sort(unique(reliability$Date))
for (r in 1:length(appVersions)) {
for (c in 1:length(dates)) {
results[r, c] <- incorrectnessRate(appVersions[r], dates[c])
}
}
incorrectnessRate <- function(build, date) {
correct <- correctCount[(correctCount$build == build) & (correctCount$date == date), ]
incorrect <- incorrectCount[(incorrectCount$build == build) & (incorrectCount$date == date), ]
rate <- (incorrect$x / (correct$x + incorrect$x))
return(rate)
}
View(incorrectCount)
results <- matrix(, nrow = length(appVersions), ncol = length(dates))
incorrectnessRate("17.3.1229.0918", as.Date("2014-11-01", "%Y-%m-%d"))
results <- matrix(, nrow = length(x), ncol = length(y))
for (r in 1:length(x)) {
for (c in 1:length(y)) {
results[r, c] <- incorrectnessRate(x[r], y[c])
}
}
incorrectnessRate <- function(dateWithBuild) {
# left outer join
correct <- merge(x = dateWithBuild, y = correctCount, by = c("date", "build"), all.x=TRUE)
incorrect <- merge(x = dateWithBuild, y = incorrectCount, by = c("date", "build"), all.x=TRUE)
rate <- (incorrect$x / (correct$x + incorrect$x))
return(rate)
}
combos <- expand.grid(build=appVersions, date=dates)
rates <- incorrectnessRate(combos)
results <- matrix(rates, nrow=length(appVersions))
results <- t(results)
results <- t(results)
rownames(results) <- appVersions
colnames(results) <- format(dates, format="%Y-%m-%d")
rownames(results) <- format(dates, format="%Y-%m-%d")
colnames(results) <- appVersions
df <- data.frame(results)
df$Date <- dates
ggplot(data = df, aes(Date, X17.3.1229.0918)) + geom_line()
library("reshape2")
mdf <- melt(mdf, id.vars="Company", value.name="value", variable.name="Year")
matplot(results, type = c("b"), pch=1, col = 1:10)
ggplot(aes(x = row.names, y = X17.3.1229.0918), data = df) +
geom_point()
View(correct)
View(results)
df <- data.frame(results)
View(df)
